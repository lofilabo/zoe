oh look ! 

^.^{

SCENARIO:

Sometimes, we handle requests shaped like this:

	http://127.0.0.1:13331/
	                       ^^^^this part

and sometimes like this:

	http://127.0.0.1:13331/letterUP
	                       ^^^^^^^^this part

so far, no problems.

But!!
If we deal with a clicking-of-a-button from a FORM
FORM FORM FORM FORM FORM FORM FORM FORM FORM FORM 

we will have an request shaped like this:

	http://127.0.0.1:13331/datainput?data1=letterUP
	                       ^^^^^^^^^^^^^^^^^^^^^^^^this part

how do we handle the __?__

i. We must separate the item BEFORE the ?

ii. Deal with the items AFTER the ? in the same way as a 'normal' request

iii.  Keep the item BEFORE the ?  It will give us a clue what to do next!

}^.^


^.^ CAN HAS STDIO?
^.^ CAN HAS SOCKS?
^.^ CAN HAS STRING?
CAN HAS MYLIB?
CAN HAS STDIO?


	I define var01 = ""
	I define var02 = ""
	I define varIN = ""
	I define retVal = ""

	I define var_GLOBAL_PUBLIC_1 = ""

	^.^ START FUNCTION HERE
	^.^ ------------------------------------------------------------------------------------------------------------------
	^.^
	^.^ We use this project develop a Function which can be used elswhere.

	^.^ 1.	varINA -- The data being looked at
	^.^ 2.	qMark  -- named after first one: question-mark. 
	^.^		  A.K.A 'separator character'
	^.^ e.g: retVal <-=- I wish_to_call StripLine  <--[ "before?after" zAnd "?" ]--<
	^.^ e.g: retVal <-=- I wish_to_call StripLine  <--[ "both_of_them" zAnd "?" ]--<
	^.^ And don't forget to look at (global var) var_GLOBAL_PUBLIC_1

	function I StripLine <--[ varINA zAnd qMark

		I define var03 = ""
		I define var04 = ""
		I define var05 = ""
		I define var06 = ""

		I define varTYPE = ""
		I define varOUT = ""

		var06 <-=- varINA

		^.^ BOLT-ON a ? to the very end, so that we can Test forwhat-comes-after ? and NOT MESS UP.
		^.^ in the future, enter function here - def'n of varINA
		^.^ we ADD a ? to the end of the string so that 'failing' the test will not stop execution.
		var03 <-=- toysoldiers>--[ varINA {.} qMark ]--<	

		^.^ pencil var03

		^.^ Having added a ? to the end, for safety,
		^.^ let's separate the END HALF of the txt (zAnd 0 <-- 0=end)
		^.^ Chop-up once based on ?.
		
	  	var04 <-=- I wish_to_call MYLIB --toBaby--> zoePassString1 ...
			<--[ var03 ...
			zAnd qMark ...
			zAnd 0 ...
		]--<

		^.^ pencil var04


		^.^	Let's now test to see is there is anything AFTER
		^.^	the ?.  
		^.^	If there is, we know that var03 is a datainput?data1=qwert - type.
		^.^	If there is not, we know it is of the letterUP type (with no ?)

		^.^ Check the value of whatever is AFTER the ?
		^.^ IF there is a ? in the middle of the string, we will have
		^.^ 'something' after it.
		^.^ BUT!! If there is only a "" After the ?, we can conclude that there
		^.^ is no ? in the middle of the string.

		zoe_same var04 {.} ""
		zoe_match?
			zoe_pass
				pencil "there is NOT a ? in this"
				varTYPE <-=- 0
				^.^ We know that there is NOT a ? in this

				^.^ we have discovered that there is no ? in here.
				^.^ Return the Original.  Nothing else needed.
				varOUT <-=- varINA
			zoe_fail
				^.^ The important part of this function.....
				^.^ There is a ? in the MIDDLE of the string.
				^.^ Let's chop it up, and the 'data' is RETURNED,
				^.^ but The Bit Before ? is STORED GLOBALLY ( var_GLOBAL_PUBLIC_1 )
				
				pencil "there IS a ? in this!"

				varTYPE <-=- 1
				^.^ We know there IS a ? in this.


				^.^ Let's get the FRONT part of the string now.
				^.^ front-half => zAnd 1
				var_GLOBAL_PUBLIC_1 <-=- I wish_to_call MYLIB --toBaby--> zoePassString1 ...
					<--[ var06 ...
					zAnd qMark ...
					zAnd 1 ...
				]--<


				^.^ Cut Off the 'added' ?
			  	var04 <-=- I wish_to_call MYLIB --toBaby--> zoePassString1 ...
					<--[ var04 ...
					zAnd qMark ...
					zAnd 1 ...
				]--<

				varOUT <-=- var04
		zoe_oh_I_see
		pencil "0=no-? ; 1=presence-of-? -->  " varTYPE 
		^.^  pencil "Out Val: " varOUT

		^.^ spit the main text back to the function.
		^.^ 'do something' with the name of the expected process 
		^.^ i.e. thing-to-do?valueName

	zReturn varOUT
	end_of_function

	^.^ -------------------------------------------------------------------------------------------------------
	^.^ 
	^.^ END FUCTION HERE




^.^	Start with examples of the 2 different things we must cope with
^.^
^.^	1.
^.^	letterUP
^.^
^.^	2.
^.^	datainput?data1=qwert

^.^	we want to detect if it is a ?.... style request
^.^
^.^	i. 	ADD a ? to the end of the string
^.^	ii.	Find out what is AFTER the FIRST ?
^.^	iii.	If it is "" , the we are are not dealing with a question-call
^.^	iv.	If it is 'something" i.e. 'not ""', then we know it is a question-call

var01 <-=- "OnlyDataIsHere"
var02 <-=- "datainput?DataPlusQuestionIsHere"

pencil ".................................................."

^.^ Chance 1. No ?
varIN <-=- var01
pencil "Going in..... " varIN
retVal <-=- I wish_to_call StripLine  <--[ varIN zAnd "?" ]--<
^.^ Now let's check the public var which holds the 'bit before' ?
pencil "    Before ? (Public): " var_GLOBAL_PUBLIC_1
pencil "    Returned Value:: " retVal
pencil ".................................................."

^.^ Chance 2. Is ?
varIN <-=- var02
pencil "Going in..... " varIN
retVal <-=- I wish_to_call StripLine  <--[ varIN zAnd "?" ]--<
^.^ Now let's check the public var which holds the 'bit before' ?
pencil "    Before ? (Public): " var_GLOBAL_PUBLIC_1
pencil "    Returned Value:: " retVal
pencil ".................................................."





I see !
